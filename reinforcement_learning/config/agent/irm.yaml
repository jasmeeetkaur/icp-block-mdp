agent:
  name: irm
  class: agent.sac.IRMAgent
  params:
    obs_dim: ??? # to be specified later
    action_dim: ??? # to be specified later
    action_range: ??? # to be specified later
    num_envs: ??? # to be specified later
    device: ${device}
    encoder_type: mlp
    critic_cfg: ${double_q_critic}
    actor_cfg: ${diag_gaussian_actor}
    encoder_feature_dim: 50
    discount: 0.99
    init_temperature: 0.1
    alpha_lr: 1e-4
    alpha_betas: [0.9, 0.999]
    actor_lr: 1e-5
    actor_betas: [0.9, 0.999]
    actor_update_frequency: 1
    critic_lr: 1e-5
    critic_betas: [0.9, 0.999]
    critic_tau: 0.005
    critic_target_update_frequency: 2
    batch_size: 1024
    l2_regularizer_weight: 1e-5
    penalty_anneal_iters: 10000
    penalty_weight: 1

    
double_q_critic:
  class: agent.critic.DoubleQCritic
  params:
    obs_dim: 50
    action_dim: ${agent.params.action_dim}
    hidden_dim: 1024
    hidden_depth: 2
    
diag_gaussian_actor:
  class: agent.actor.DiagGaussianActor
  params:
    obs_dim: 50
    action_dim: ${agent.params.action_dim}
    hidden_depth: 2
    hidden_dim: 1024
    log_std_bounds: [-5, 2]